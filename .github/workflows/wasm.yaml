name: Build WASM frontend

on:
  pull_request:

  push:
    tags:
      - 'v*'

  workflow_dispatch:
    inputs:
      version:
        description: 'Version number in the format `v1.2.3`'
        required: true
        type: string

jobs:
  build-wasm:
    # "macos13" has more resources than the private repo ubuntu runners,
    # (but costs more minutes, but comes out of usual minutes allowance)
    # but for public repos, it's a touch slower than ubuntu-latest at building wasm.
    runs-on: ubuntu-latest

    permissions:
      packages: write   # ghcr (only if pushing a docker image)
      contents: write   # To push a branch
      pages: write      # To push to a GitHub Pages site
      id-token: write   # To update the deployment status

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: 'examples'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install wasm-bindgen-cli
        run: |
          cargo install wasm-bindgen-cli

      - name: Cargo build (for wasm)
        run: |
          rustup target add wasm32-unknown-unknown
          cd examples
          ./build_wasm.sh

      - name: Rename htdocs for pages
        run: mv htdocs wasm-examples

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload wasm frontend artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: wasm-examples

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

# We can publish as an nginx container if desired:
#
# but for now publishing to github pages is fine.
# perhaps inline as iframes in the book?
#
#     - name: Login to GitHub Container Registry
#       uses: docker/login-action@v3
#       with:
#         registry: ghcr.io
#         username: ${{ github.actor }}
#         password: ${{ secrets.GITHUB_TOKEN }}
#
#     - name: Prepare Dockerfile
#       run: |
#         echo '
#         FROM nginx:mainline-alpine
#         COPY ./htdocs/* /usr/share/nginx/html/
#         ' > Dockerfile.generated
#
#     - name: Docker meta
#       id: meta
#       uses: docker/metadata-action@v5
#       with:
#         images: ${{ github.repository }}-wasm
#         tags: |
#           type=semver,pattern={{version}}
#           type=sha,format=long
#           latest
#
#     - name:  Build and publish a Docker image for ${{ github.repository }}
#       uses: docker/build-push-action@v6
#       with:
#         push: true
#         context: .
#         file: ./Dockerfile.generated
#         tags: ${{ steps.meta.outputs.tags }}
#         labels: ${{ steps.meta.outputs.labels }}