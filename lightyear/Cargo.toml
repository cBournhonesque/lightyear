[package]
name = "lightyear"
version = "0.12.0"
authors = ["Charles Bournhonesque <charlesbour@gmail.com>"]
edition = "2021"
rust-version = "1.65"
description = "Server-client networking library for the Bevy game engine"
readme = "../README.md"
repository = "https://github.com/cBournhonesque/lightyear"
keywords = ["bevy", "multiplayer", "networking", "netcode", "gamedev"]
categories = ["game-development", "network-programming"]
license = "MIT OR Apache-2.0"
exclude = ["/tests"]

[features]
metrics = [
  "dep:metrics",
  "metrics-util",
  "metrics-tracing-context",
  "metrics-exporter-prometheus",
  "dep:tokio",
]
mock_time = ["dep:mock_instant"]
render = ["bevy/bevy_render"]
webtransport = [
  "dep:wtransport",
  "dep:xwt-core",
  "dep:xwt-web-sys",
  "dep:web-sys",
  "dep:tokio",
  "dep:ring",
]
leafwing = ["dep:leafwing-input-manager", "lightyear_macros/leafwing"]
xpbd_2d = ["dep:bevy_xpbd_2d"]
websocket = [
  "dep:tokio",
  "dep:tokio-tungstenite",
  "dep:futures-util",
  "dep:web-sys",
  "dep:wasm-bindgen",
]
steam = ["dep:steamworks"]

[dependencies]
# utils
anyhow = "1.0"
base64 = "0.21.5"
chrono = "=0.4.37"
cfg-if = "1.0"
derive_more = "0.99.17"
enum_delegate = "0.2"
enum_dispatch = "0.3"
hashbrown = "0.14"
# used to have the same instant in wasm and native. (maybe can be replaced by bevy_utils in 0.13)
instant = "0.1.12"
governor = "0.6.0"
mock_instant = { version = "0.3.1", optional = true }
nonzero_ext = "0.3.0"
paste = "1.0"
rand = "0.8"
ringbuffer = "0.15"
thiserror = "1.0.50"
seahash = "4.1.0"

# input
leafwing-input-manager = { version = "0.13", optional = true }

# physics
bevy_xpbd_2d = { version = "0.4", optional = true }

# serialization
bitcode = { version = "0.5.1", package = "bitcode_lightyear_patch", path = "../vendor/bitcode", features = [
  "serde",
] }
bytes = { version = "1.5", features = ["serde"] }
object-pool = { version = "0.5.4" }
self_cell = "1.0"
serde = { version = "1.0.193", features = ["derive"] }

# netcode
chacha20poly1305 = { version = "0.10", features = ["std"] }
byteorder = "1.5.0"

# derive
lightyear_macros = { version = "0.12.0", path = "../macros" }

# tracing
tracing = "0.1.40"
tracing-log = "0.2.0"
tracing-subscriber = { version = "0.3.17", features = [
  "registry",
  "env-filter",
] }

# server
crossbeam-channel = { version = "0.5.8", features = [] }

# metrics
metrics = { version = "0.22", optional = true }
metrics-util = { version = "0.15", optional = true }
metrics-tracing-context = { version = "0.15", optional = true }
metrics-exporter-prometheus = { version = "0.13.0", optional = true, default-features = false, features = [
  "http-listener",
] }

# bevy
bevy = { version = "0.13", default-features = false, features = [
  "multi-threaded",
] }


# WebSocket
futures-util = { version = "0.3.30", optional = true }

# transport
# we don't need any tokio features, we use only use the tokio channels
tokio = { version = "1.36", features = [
  "sync",
], default-features = false, optional = true }
async-compat = "0.2.3"

[target."cfg(not(target_family = \"wasm\"))".dependencies]
# connection
# steamworks-sys doesn't build on wasm
steamworks = { version = "0.11", optional = true }
# webtransport
wtransport = { version = "=0.1.11", optional = true, features = [
  "self-signed",
  "dangerous-configuration",
] }
# websocket
tokio-tungstenite = { version = "0.21.0", optional = true, features = [
  "connect",
  "handshake",
] }

[target."cfg(target_family = \"wasm\")".dependencies]
console_error_panic_hook = { version = "0.1.7" }
ring = { version = "0.17.7", optional = true }
web-sys = { version = "0.3", optional = true, features = [
  "WebTransport",
  "WebTransportHash",
  "WebTransportOptions",
  "WebTransportBidirectionalStream",
  "WebTransportSendStream",
  "WebTransportReceiveStream",
  "ReadableStreamDefaultReader",
  "WritableStreamDefaultWriter",
  "WebTransportDatagramDuplexStream",
  "WebSocket",
  "CloseEvent",
  "ErrorEvent",
  "MessageEvent",
  "BinaryType",
] }
futures-lite = { version = "2.1.0", optional = true }
getrandom = { version = "0.2.11", features = [
  "js", # feature 'js' is required for wasm
] }
xwt-core = { version = "0.2", optional = true }
xwt-web-sys = { version = "0.6", optional = true }
wasm-bindgen = { version = "0.2.90", optional = true }


[dev-dependencies]
wasm-bindgen-test = "0.3.39"
derive_more = { version = "0.99", features = ["add", "mul"] }
mock_instant = { version = "0.3.1" }
tracing-subscriber = "0.3.17"
bitvec = "1.0"
approx = "0.5.1"

# docs.rs-specific configuration
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
